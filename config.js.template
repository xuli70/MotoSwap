/**
 * config.js.template - MotoSwap Environment Configuration
 * 
 * This file is processed by envsubst in the Dockerfile
 * Variables ${VARIABLE_NAME} are replaced by real values from Coolify
 * 
 * NEVER commit this file as config.js
 * Only commit as config.js.template
 */

// Main configuration object for MotoSwap
window.MOTOSWAP_CONFIG = {
    // === APP CONFIGURATION ===
    APP_NAME: '${APP_NAME}',
    ENVIRONMENT: '${MOTOSWAP_ENV}',
    VERSION: '1.0.0',
    
    // === FUTURE BACKEND INTEGRATION ===
    // Ready for when Supabase/backend is integrated
    SUPABASE_URL: '${SUPABASE_URL}',
    SUPABASE_ANON_KEY: '${SUPABASE_ANON_KEY}',
    
    // === AUTHENTICATION (Future use) ===
    // For when user authentication is implemented
    AUTH_ENABLED: false,
    PASSWORD_USER: '${PASSWORD_USER}',
    PASSWORD_ADMIN: '${PASSWORD_ADMIN}',
    
    // === API CONFIGURATION ===
    // For external services integration
    API_BASE_URL: '${API_BASE_URL}',
    
    // === FEATURES FLAGS ===
    // Toggle features on/off
    FEATURES: {
        MESSAGING: true,
        REVIEWS: true,
        ADVANCED_SEARCH: true,
        NOTIFICATIONS: false
    }
};

// Legacy compatibility - some code might expect window.APP_CONFIG
window.APP_CONFIG = window.MOTOSWAP_CONFIG;

// Simple env object for backward compatibility
window.env = {
    SUPABASE_URL: '${SUPABASE_URL}',
    SUPABASE_ANON_KEY: '${SUPABASE_ANON_KEY}',
    ENVIRONMENT: '${MOTOSWAP_ENV}'
};

// Configuration validation function
window.validateMotoSwapConfig = function() {
    const config = window.MOTOSWAP_CONFIG;
    
    // Basic validation - currently minimal since it's a static app
    if (!config.APP_NAME) {
        console.warn('‚ö†Ô∏è APP_NAME not configured');
    }
    
    // Future validations for when backend is integrated
    if (config.SUPABASE_URL && !config.SUPABASE_URL.includes('supabase') && config.SUPABASE_URL !== '${SUPABASE_URL}') {
        console.warn('‚ö†Ô∏è SUPABASE_URL seems incorrect');
    }
    
    console.log('‚úÖ MotoSwap configuration loaded');
    console.log('üèçÔ∏è Environment:', config.ENVIRONMENT || 'development');
    
    return true;
};

// Initialize configuration
window.validateMotoSwapConfig();

// Log configuration status
console.log('üöÄ MotoSwap config.js generated from environment variables (Coolify)');
console.log('üîß App Name:', window.MOTOSWAP_CONFIG.APP_NAME || 'MotoSwap');
console.log('üåç Environment:', window.MOTOSWAP_CONFIG.ENVIRONMENT || 'production');

/**
 * USAGE INSTRUCTIONS:
 * 
 * 1. DEVELOPMENT:
 *    - Use config.js.example for local development
 *    - Never edit this template for local work
 * 
 * 2. PRODUCTION (COOLIFY):
 *    - This file is automatically processed
 *    - Variables ${VAR} are replaced with real values
 *    - Final result is a functional config.js
 * 
 * 3. ADDING NEW VARIABLES:
 *    - Add them in MOTOSWAP_CONFIG object
 *    - Use ${VARIABLE_NAME} syntax
 *    - Configure the variable in Coolify
 *    - Redeploy to apply changes
 * 
 * 4. FUTURE BACKEND INTEGRATION:
 *    - Uncomment and configure Supabase variables
 *    - Set AUTH_ENABLED to true when ready
 *    - Update validation function as needed
 */