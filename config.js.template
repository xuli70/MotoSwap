/**
 * config.js.template - Template para Variables de Entorno
 * 
 * Este archivo es procesado por envsubst en el Dockerfile
 * Las variables ${VARIABLE_NAME} son reemplazadas por valores reales de Coolify
 * 
 * NUNCA commitear este archivo como config.js
 * Solo commitear como config.js.template
 */

// Configuraci√≥n principal desde variables de entorno de Coolify
window.APP_CONFIG = {
    // === OBLIGATORIAS ===
    // Tu aplicaci√≥n NO funcionar√° sin estas variables
    SUPABASE_URL: '${SUPABASE_URL}',
    SUPABASE_ANON_KEY: '${SUPABASE_ANON_KEY}',
    PASSWORD_USER: '${PASSWORD_USER}',
    PASSWORD_ADMIN: '${PASSWORD_ADMIN}',
    
    // === OPCIONALES ===
    // Solo incluir si tu aplicaci√≥n las usa
    OPENAI_API_KEY: '${OPENAI_API_KEY}',
    AI_MODEL: '${AI_MODEL}',
    
    // === CONFIGURACI√ìN DE APLICACI√ìN ===
    APP_NAME: 'MotoSwap',
    ENVIRONMENT: 'production',
    VERSION: '1.0.0',
    
    // === CONFIGURACI√ìN DE SEGURIDAD ===
    SECURITY_ENABLED: true,
    SECURITY_STRICT: false,  // No ser demasiado agresivo para UX
    SECURITY_DISABLE_CONTEXT: false,
    SECURITY_DISABLE_DEVKEYS: false,
    
    // === FEATURES ===
    FEATURES: {
        MESSAGING: true,
        REVIEWS: true,
        ADVANCED_SEARCH: true,
        NOTIFICATIONS: false,
        DEBUG_MODE: false  // Deshabilitado en producci√≥n
    }
};

// Sistema de compatibilidad dual para c√≥digo legacy
// Permite usar tanto window.APP_CONFIG como window.env
window.env = {
    SUPABASE_URL: '${SUPABASE_URL}',
    SUPABASE_ANON_KEY: '${SUPABASE_ANON_KEY}',
    PASSWORD_USER: '${PASSWORD_USER}',
    PASSWORD_ADMIN: '${PASSWORD_ADMIN}',
    OPENAI_API_KEY: '${OPENAI_API_KEY}',
    AI_MODEL: '${AI_MODEL}',
    ENVIRONMENT: 'production'
};

// Funci√≥n de validaci√≥n de configuraci√≥n
window.validateConfig = function() {
    const config = window.APP_CONFIG;
    const required = ['SUPABASE_URL', 'SUPABASE_ANON_KEY', 'PASSWORD_USER', 'PASSWORD_ADMIN'];
    const missing = required.filter(key => !config[key] || config[key] === '${' + key + '}');
    
    if (missing.length > 0) {
        console.error('‚ùå Variables de entorno faltantes:', missing);
        console.error('üí° Verificar configuraci√≥n en Coolify');
        return false;
    }
    
    // Validar formato de URLs
    if (config.SUPABASE_URL && !config.SUPABASE_URL.startsWith('https://')) {
        console.error('‚ùå SUPABASE_URL debe comenzar con https://');
        return false;
    }
    
    // Validar formato de clave an√≥nima de Supabase
    if (config.SUPABASE_ANON_KEY && !config.SUPABASE_ANON_KEY.startsWith('eyJ')) {
        console.error('‚ùå SUPABASE_ANON_KEY no parece v√°lida (debe comenzar con eyJ)');
        return false;
    }
    
    console.log('‚úÖ Configuraci√≥n validada correctamente');
    console.log('üåê Entorno:', config.ENVIRONMENT);
    console.log('üîó Supabase URL:', config.SUPABASE_URL);
    console.log('üõ°Ô∏è Seguridad:', config.SECURITY_ENABLED ? 'ACTIVADA' : 'DESACTIVADA');
    
    return true;
};

// Funci√≥n de inicializaci√≥n segura
window.initializeApp = function() {
    console.log('üöÄ Inicializando MotoSwap en modo PRODUCCI√ìN...');
    
    // Validar configuraci√≥n
    if (!window.validateConfig()) {
        console.error('‚ùå Error cr√≠tico en configuraci√≥n. La aplicaci√≥n no se puede inicializar.');
        return false;
    }
    
    // Inicializar seguridad si est√° disponible
    if (window.MotoSwapSecurity && window.APP_CONFIG.SECURITY_ENABLED) {
        window.MotoSwapSecurity.configure({
            strict: window.APP_CONFIG.SECURITY_STRICT,
            disableContext: window.APP_CONFIG.SECURITY_DISABLE_CONTEXT,
            disableDevKeys: window.APP_CONFIG.SECURITY_DISABLE_DEVKEYS
        });
        console.log('üõ°Ô∏è Sistema de seguridad configurado');
    }
    
    // Configurar cliente Supabase si est√° disponible
    if (window.supabase && window.APP_CONFIG.SUPABASE_URL && window.APP_CONFIG.SUPABASE_ANON_KEY) {
        try {
            window.supabaseClient = window.supabase.createClient(
                window.APP_CONFIG.SUPABASE_URL,
                window.APP_CONFIG.SUPABASE_ANON_KEY
            );
            console.log('üóÑÔ∏è Cliente Supabase inicializado');
        } catch (error) {
            console.error('‚ùå Error inicializando Supabase:', error.message);
            return false;
        }
    }
    
    console.log('‚úÖ MotoSwap inicializado correctamente');
    return true;
};

// Log de confirmaci√≥n
console.log('üöÄ config.js generado desde variables de entorno (Coolify)');
console.log('üîç Validando configuraci√≥n...');

// Auto-validaci√≥n e inicializaci√≥n
if (window.validateConfig()) {
    console.log('‚è≥ Aplicaci√≥n lista para inicializar');
} else {
    console.error('üí• Error cr√≠tico en configuraci√≥n');
}

/**
 * INSTRUCCIONES DE USO:
 * 
 * 1. DESARROLLO LOCAL:
 *    - Copiar config.js.example como config.js
 *    - NO usar este template para desarrollo local
 * 
 * 2. PRODUCCI√ìN (COOLIFY):
 *    - Este archivo se procesa autom√°ticamente
 *    - Variables ${VAR} se reemplazan por valores reales
 *    - Resultado final es config.js funcional
 * 
 * 3. VARIABLES REQUERIDAS EN COOLIFY:
 *    - SUPABASE_URL: URL de tu proyecto Supabase
 *    - SUPABASE_ANON_KEY: Clave an√≥nima de Supabase  
 *    - PASSWORD_USER: Contrase√±a para usuarios regulares
 *    - PASSWORD_ADMIN: Contrase√±a para administradores
 * 
 * 4. VARIABLES OPCIONALES:
 *    - OPENAI_API_KEY: Para funciones de IA
 *    - AI_MODEL: Modelo de IA (default: gpt-4o-mini)
 * 
 * 5. PERSONALIZACI√ìN:
 *    - Agregar nuevas variables en secci√≥n correspondiente
 *    - Configurar las variables en Coolify
 *    - Reconstruir y deployar
 * 
 * 6. DEBUGGING:
 *    - Verificar logs: "config.js generado exitosamente"
 *    - Si falla: verificar variables en Coolify
 *    - Si undefined: verificar sintaxis ${VARIABLE}
 * 
 * 7. INICIALIZACI√ìN:
 *    - Llamar window.initializeApp() en index.html
 *    - Verificar que todas las validaciones pasen
 *    - Comprobar que Supabase se conecta correctamente
 */